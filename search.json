[{"path":"https://statimagcoll.github.io/RESI/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Megan Jones. Author, maintainer. Kaidi Kang. Author. Simon Vandekar. Author.","code":""},{"path":"https://statimagcoll.github.io/RESI/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jones M, Kang K, Vandekar S (2025). “RESI: R Package Robust Effect Sizes.” Journal Statistical Software, 112(3), 1–27. doi:10.18637/jss.v112.i03.","code":"@Article{,   title = {{RESI}: An {R} Package for Robust Effect Sizes},   author = {Megan Jones and Kaidi Kang and Simon Vandekar},   journal = {Journal of Statistical Software},   year = {2025},   volume = {112},   number = {3},   pages = {1--27},   doi = {10.18637/jss.v112.i03}, }"},{"path":"https://statimagcoll.github.io/RESI/index.html","id":"resi-","dir":"","previous_headings":"","what":"RESI: Robust Effect Size Inference in R","title":"RESI: Robust Effect Size Inference in R","text":"RESI R package designed implement Robust Effect Size Index (RESI, denoted S) described Vandekar, Tao, & Blume (2020). RESI versatile effect size measure can easily computed added common reports (summary ANOVA tables). package currently supports lm, glm, nls, survreg, coxph, hurdle, zeroinfl, gee, geeglm, lme, lmerMod models. Nonparametric bootstrapping used compute confidence intervals, although interval performance yet evaluated longitudinal models. Bayesian bootstrap also available lm nls models. addition main resi function, package also includes point-estimate-function (resi_pe), conversions S common effect size measures vice versa, print methods, plot methods, summary methods, Anova/anova methods. detailed vignette written. like contribute package, please branch GitHub submit pull request describing contribution. Please use GitHub Issues page report problems Discussions page seek additional support.","code":""},{"path":"https://statimagcoll.github.io/RESI/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"RESI: Robust Effect Size Inference in R","text":"Jones, M., Kang, K., & Vandekar, S. (2023). RESI: R Package Robust Effect Sizes. arXiv preprint arXiv:2302.12345. Kang, K., Jones, M. T., Armstrong, K., Avery, S., McHugo, M., Heckers, S., & Vandekar, S. Accurate Confidence Bayesian Interval Estimation Non-centrality Parameters Effect Size Indices. Psychometrika. 2023. 10.1007/s11336-022-09899-x. Advance online publication. https://doi.org/10.1007/s11336-022-09899-x. Vandekar S, Tao R, Blume J. Robust Effect Size Index. Psychometrika. 2020 Mar;85(1):232-246. doi: 10.1007/s11336-020-09698-2.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/Anova.resi.html","id":null,"dir":"Reference","previous_headings":"","what":"Anova method for resi objects — anova.resi","title":"Anova method for resi objects — anova.resi","text":"running resi function fitted model, function can used print Anova-style table component. resi function run `store.boot = TRUE` option store full matrix bootstrapped estimates, user can specify different alpha level function's confidence intervals.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/Anova.resi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anova method for resi objects — anova.resi","text":"","code":"# S3 method for class 'resi' anova(object, alpha = NULL, ...)"},{"path":"https://statimagcoll.github.io/RESI/reference/Anova.resi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anova method for resi objects — anova.resi","text":"object object resulting resi function alpha optional new specification confidence level. Can vector-valued ... ignored","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/Anova.resi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anova method for resi objects — anova.resi","text":"Returns `anova` object containing computed Anova-style table","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/Anova.resi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anova method for resi objects — anova.resi","text":"resi function uses car::Anova function compute Anova table.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/Anova.resi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anova method for resi objects — anova.resi","text":"","code":"# fit a model mod = lm(charges ~ bmi + sex, data = RESI::insurance)  # run resi with the store.boot = TRUE option resi.obj = resi(mod, nboot = 100, store.boot = TRUE, alpha = 0.01)  # run anova, specifying a different alpha level if desired anova(resi.obj, alpha = 0.05) #>     Df       F   Pr(>F)     RESI    2.5%  97.5% #> bmi  1 45.2997 0.000000 0.181819 0.14057 0.2260 #> sex  1  3.2439 0.071915 0.040908 0.00000 0.1009"},{"path":"https://statimagcoll.github.io/RESI/reference/Rsq2S.html","id":null,"dir":"Reference","previous_headings":"","what":"Covert R^2 to S — Rsq2S","title":"Covert R^2 to S — Rsq2S","text":"Converts R^2, partial coefficient determination, robust effect size index (S) using formula Vandekar, Tao, & Blume (2020).","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/Rsq2S.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covert R^2 to S — Rsq2S","text":"","code":"Rsq2S(Rsq)"},{"path":"https://statimagcoll.github.io/RESI/reference/Rsq2S.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covert R^2 to S — Rsq2S","text":"Rsq Numeric, R^2","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/Rsq2S.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covert R^2 to S — Rsq2S","text":"Returns estimate R^2 based RESI","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/Rsq2S.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covert R^2 to S — Rsq2S","text":"formula conversion : \\(S = \\sqrt((-R^2)/(R^2 - 1))\\)","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/Rsq2S.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covert R^2 to S — Rsq2S","text":"","code":"# consider a moderate effect size of R^2 = 0.1 Rsq2S(0.1) #> [1] 0.3333333 # this corresponds to a RESI of 0.333"},{"path":"https://statimagcoll.github.io/RESI/reference/S2Rsq.html","id":null,"dir":"Reference","previous_headings":"","what":"Covert S to R^2 — S2Rsq","title":"Covert S to R^2 — S2Rsq","text":"Converts robust effect size index (S) R^2, partial coefficient determination, using formula Vandekar, Tao, & Blume (2020).","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2Rsq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covert S to R^2 — S2Rsq","text":"","code":"S2Rsq(S)"},{"path":"https://statimagcoll.github.io/RESI/reference/S2Rsq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covert S to R^2 — S2Rsq","text":"S Numeric, robust effect size index.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2Rsq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covert S to R^2 — S2Rsq","text":"Returns estimate R^2 based RESI","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2Rsq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covert S to R^2 — S2Rsq","text":"formula conversion : \\( R^2 = S^2 / (1 + S^2)\\)","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2Rsq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covert S to R^2 — S2Rsq","text":"","code":"# fit a simple linear regression with a binary predictor mod = lm(charges ~ sex, data = RESI::insurance)  # calculate t-value t = summary(mod)$coefficients[2, \"t value\"]  # calculate RESI (S) S = t2S(t, n = 1338, rdf = 1336)  # convert S to R^2 S2Rsq(S) #> [1] 0.003273823"},{"path":"https://statimagcoll.github.io/RESI/reference/S2chisq.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert non-zero S to Chi-square statistic — S2chisq","title":"Convert non-zero S to Chi-square statistic — S2chisq","text":"Converts robust effect size index (S) Chi-square statistic, given S greater 0. S value 0, upper bound Chi-square statistic can computed. Vector arguments accepted. different length arguments passed dealt usual way R.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2chisq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert non-zero S to Chi-square statistic — S2chisq","text":"","code":"S2chisq(S, df, n)"},{"path":"https://statimagcoll.github.io/RESI/reference/S2chisq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert non-zero S to Chi-square statistic — S2chisq","text":"S value RESI estimate. df Number degrees freedom chi-square statistic. n Number independent samples.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2chisq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert non-zero S to Chi-square statistic — S2chisq","text":"Returns scalar vector argument Chi-square statistic.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2chisq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert non-zero S to Chi-square statistic — S2chisq","text":"formula converting RESI estimate 0 Chi-square statistic : \\( chisq = n*S^2 + df\\) RESI estimate 0, known Chi-square statistic less equal degrees freedom.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2chisq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert non-zero S to Chi-square statistic — S2chisq","text":"","code":"# convert S estimates with corresponding degrees of freedom to Chi-square estimates S_ests = c(0.2, 0.4, 0.6) dfs = c(2, 1, 3) S2chisq(S = S_ests, df = dfs, n = 300) #> [1]  14  49 111"},{"path":"https://statimagcoll.github.io/RESI/reference/S2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert S to Cohen's d — S2d","title":"Convert S to Cohen's d — S2d","text":"Converts robust effect size index (S) Cohen's d using formula Vandekar, Tao, & Blume (2020).","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert S to Cohen's d — S2d","text":"","code":"S2d(S, pi = 0.5)"},{"path":"https://statimagcoll.github.io/RESI/reference/S2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert S to Cohen's d — S2d","text":"S Numeric, robust effect size index. pi Numeric, sampling proportions.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert S to Cohen's d — S2d","text":"Returns estimate Cohen's d based RESI.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert S to Cohen's d — S2d","text":"pi parameter comes fact Cohen's d account unequal sample proportions population, S . default set natural value 1/2, corresponds case control design, example, sampling proportions always controlled experimenter. formula conversion : \\( d = | S * \\sqrt(1/\\pi + 1/(1 - \\pi)) |\\)","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert S to Cohen's d — S2d","text":"","code":"# fit a simple linear regression with a binary predictor mod = lm(charges ~ sex, data = RESI::insurance)  # calculate t-value t = summary(mod)$coefficients[2, \"t value\"]  # calculate RESI (S) S = t2S(t, n = 1338, rdf = 1336)  # determine sample proportions pi = length(which(RESI::insurance[,\"sex\"]==\"male\"))/1338  # convert S to Cohen's d S2d(S = S, pi = pi) #> [1] 0.1146287"},{"path":"https://statimagcoll.github.io/RESI/reference/S2fsq.html","id":null,"dir":"Reference","previous_headings":"","what":"Covert S to Cohen's f^2 — S2fsq","title":"Covert S to Cohen's f^2 — S2fsq","text":"Converts robust effect size index (S) Cohen's f^2 (effect size multiple regression) using formula Vandekar, Tao, & Blume (2020).","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2fsq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covert S to Cohen's f^2 — S2fsq","text":"","code":"S2fsq(S)"},{"path":"https://statimagcoll.github.io/RESI/reference/S2fsq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covert S to Cohen's f^2 — S2fsq","text":"S Numeric,robust effect size index.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2fsq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covert S to Cohen's f^2 — S2fsq","text":"Returns estimate Cohen's f^2 based RESI","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2fsq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covert S to Cohen's f^2 — S2fsq","text":"formula conversion : \\( f^2 = S^2\\)","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2fsq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covert S to Cohen's f^2 — S2fsq","text":"","code":"# fit a linear regression model with continuous outcome and predictor mod = lm(charges ~ age, data = RESI::insurance)  # obtain t value for calculating RESI t = summary(mod)$coefficients[2, \"t value\"]  # calculate RESI S = t2S(t, n = 1338, rdf = 1336)  # convert to f^2 S2fsq(S) #> [1] 0.09792731"},{"path":"https://statimagcoll.github.io/RESI/reference/S2z.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert RESI (S) estimate to Z statistic — S2z","title":"Convert RESI (S) estimate to Z statistic — S2z","text":"Converts robust effect size index (S) Z statistic. Vector arguments accepted. different length arguments passed dealt usual way R.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert RESI (S) estimate to Z statistic — S2z","text":"","code":"S2z(S, n, unbiased = TRUE)"},{"path":"https://statimagcoll.github.io/RESI/reference/S2z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert RESI (S) estimate to Z statistic — S2z","text":"S value RESI estimate. n Number independent samples. unbiased Logical, whether unbiased alternative estimator used compute RESI estimate. Default TRUE.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert RESI (S) estimate to Z statistic — S2z","text":"Returns scalar vector argument Chi-square statistic.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2z.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert RESI (S) estimate to Z statistic — S2z","text":"formula converting RESI estimate corresponding Z statistic depends estimator used compute RESI estimate (unbiased vs. alternative, see z2S). unbiased estimator, RESI can positive negative 1-1 transformation S Z. formula converting S (unbiased) Z statistic : \\(\\sqrt(n)*S\\) alternative formula, RESI estimate 0, Z statistic known within interval, [-1, 1]. non-zero S, formula : \\(\\sqrt{S^2}/S\\sqrt(n*abs(S) + 1)\\)","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/S2z.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert RESI (S) estimate to Z statistic — S2z","text":"","code":"# convert S estimates with corresponding degrees of freedom to # Z statistics estimates (using unbiased formula) S_ests = c(-0.2, 0, 0.1) S2z(S = S_ests, n = 300, unbiased = TRUE) #> [1] -3.464102  0.000000  1.732051  # convert S estimates with corresponding degrees of freedom to # Z statistics estimates (using alernative formula) S_ests = c(-0.2, 0, 0.1) S2z(S = S_ests, n = 300, unbiased = FALSE) #> Warning: Function is not 1-1 for S = 0, Z statistic is between -1 and 1 #> [1] -7.810250        NA  5.567764"},{"path":"https://statimagcoll.github.io/RESI/reference/chisq2S.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the robust effect size index estimate from chi-squared statistic. — chisq2S","title":"Compute the robust effect size index estimate from chi-squared statistic. — chisq2S","text":"function computes robust effect size index Vandekar, Tao, & Blume (2020). Vector arguments accepted. different length arguments passed dealt usual way R. mixed effects models, RESI conditional average correlation structure within subjects.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/chisq2S.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the robust effect size index estimate from chi-squared statistic. — chisq2S","text":"","code":"chisq2S(chisq, df, n)"},{"path":"https://statimagcoll.github.io/RESI/reference/chisq2S.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the robust effect size index estimate from chi-squared statistic. — chisq2S","text":"chisq chi-square statistic parameter interest. df Number degrees freedom chi-square statistic. n Number independent samples.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/chisq2S.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the robust effect size index estimate from chi-squared statistic. — chisq2S","text":"Returns scalar vector argument robust effect size index estimate.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/chisq2S.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the robust effect size index estimate from chi-squared statistic. — chisq2S","text":"formula converting Chi-square statistic RESI : \\( S = \\sqrt(max( 0, (chisq - df)/n))\\)","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/chisq2S.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the robust effect size index estimate from chi-squared statistic. — chisq2S","text":"","code":"# obtain Chi-sq value by fitting an lm and running a Wald test mod = lm(charges ~ region * age + bmi + sex, data = RESI::insurance)  # run a Wald test with robust variance wt = lmtest::waldtest(mod, vcov = sandwich::vcovHC, test = \"Chisq\")  # get Chi-sq value and degrees of freedom chisq = wt$Chisq[2] df = abs(wt$Df[2])  # run chisq2S to convert to RESI chisq2S(chisq, df = df, n = nrow(mod$model)) #> [1] 0.3598259"},{"path":"https://statimagcoll.github.io/RESI/reference/d2S.html","id":null,"dir":"Reference","previous_headings":"","what":"Covert Cohen's d to |S| — d2S","title":"Covert Cohen's d to |S| — d2S","text":"Converts Cohen's d robust effect size index (S) using formula Vandekar, Tao, & Blume (2020).","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/d2S.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covert Cohen's d to |S| — d2S","text":"","code":"d2S(d, pi = 0.5)"},{"path":"https://statimagcoll.github.io/RESI/reference/d2S.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covert Cohen's d to |S| — d2S","text":"d Numeric, value Cohen's d. pi Numeric, sampling proportions.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/d2S.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covert Cohen's d to |S| — d2S","text":"Returns estimate robust effect size index","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/d2S.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covert Cohen's d to |S| — d2S","text":"pi parameter comes fact Cohen's d account unequal sample proportions population, S . default set natural value 1/2, corresponds case control design, example, sampling proportions always controlled experimenter. formula convert Cohen's d S : \\(S = d/\\sqrt( 1/\\pi + 1/ (1 - \\pi))\\)","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/d2S.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covert Cohen's d to |S| — d2S","text":"","code":"# Consider an experiment with equal sampling proportions and a medium effect size # corresponding to a Cohen's d of 0.5. # convert to RESI (S) d2S(d = 0.5) #> [1] 0.25  # This corresponds to a RESI of 0.25."},{"path":"https://statimagcoll.github.io/RESI/reference/depression.html","id":null,"dir":"Reference","previous_headings":"","what":"Depression Treatment Data — depression","title":"Depression Treatment Data — depression","text":"longitudinal dataset comparing two treatments depression.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/depression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Depression Treatment Data — depression","text":"","code":"depression"},{"path":"https://statimagcoll.github.io/RESI/reference/depression.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Depression Treatment Data — depression","text":"data frame 1020 rows 5 variables: diagnose diagnosed depression severity drug treatment; standard new id patient id time time point treatment depression depression response time treatment. 1 = Normal, 0 = Abnormal","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/depression.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Depression Treatment Data — depression","text":"http://static.lib.virginia.edu/statlab/materials/data/depression.csv","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/depression.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Depression Treatment Data — depression","text":"Agresti, . (2002). Categorical Data Analysis. Wiley, 2nd Edition.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/f2S.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the robust effect size index estimate from F-statistic — f2S","title":"Compute the robust effect size index estimate from F-statistic — f2S","text":"function computes robust effect size index Vandekar, Tao, & Blume (2020). Vector arguments accepted. different length arguments passed dealt usual way R.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/f2S.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the robust effect size index estimate from F-statistic — f2S","text":"","code":"f2S(f, df, rdf, n)"},{"path":"https://statimagcoll.github.io/RESI/reference/f2S.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the robust effect size index estimate from F-statistic — f2S","text":"f F statistic parameter interest. df Number degrees freedom F statistic. rdf Model residual degrees freedom. n Number independent samples.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/f2S.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the robust effect size index estimate from F-statistic — f2S","text":"Returns scalar vector argument robust effect size index estimate.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/f2S.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the robust effect size index estimate from F-statistic — f2S","text":"formula converting F statistic S : \\( S = \\sqrt(max(0, (f * df * (rdf - 2)/rdf - df)/n))\\) estimator derived setting statistic equal expected value test statistic solving S.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/f2S.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the robust effect size index estimate from F-statistic — f2S","text":"","code":"# to obtain example F values, first fit a lm mod = lm(charges ~ region * age + bmi + sex, data = RESI::insurance)  # run Anova, using a robust variance-covariance function # get the F values and Df values fs = car::Anova(mod, vcov. = sandwich::vcovHC)[1:5, \"F\"] #> Coefficient covariances computed by sandwich::vcovHC dfs = car::Anova(mod, vcov. = sandwich::vcovHC)[1:5, \"Df\"] #> Coefficient covariances computed by sandwich::vcovHC  # get RESI estimates f2S(fs, df = dfs, rdf = mod$df.residual, n = nrow(RESI::insurance)) #> [1] 0.03647985 0.29511133 0.14979819 0.05154917 0.01605603"},{"path":"https://statimagcoll.github.io/RESI/reference/fsq2S.html","id":null,"dir":"Reference","previous_headings":"","what":"Covert Cohen's f^2 to S — fsq2S","title":"Covert Cohen's f^2 to S — fsq2S","text":"Converts Cohen's f^2 robust effect size index (S) using formula Vandekar, Tao, & Blume (2020).","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/fsq2S.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covert Cohen's f^2 to S — fsq2S","text":"","code":"fsq2S(fsq)"},{"path":"https://statimagcoll.github.io/RESI/reference/fsq2S.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covert Cohen's f^2 to S — fsq2S","text":"fsq Numeric, value Cohen's f^2.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/fsq2S.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covert Cohen's f^2 to S — fsq2S","text":"Returns estimate robust effect size index","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/fsq2S.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covert Cohen's f^2 to S — fsq2S","text":"formula conversion : \\(S =  \\sqrt(f^2)\\)","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/fsq2S.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covert Cohen's f^2 to S — fsq2S","text":"","code":"# consider a moderate effect size of f^2 = 0.3 fsq2S(0.3) #> [1] 0.5477226 # This corresponds to a RESI of 0.5477226"},{"path":"https://statimagcoll.github.io/RESI/reference/ggplot.resi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting RESI Estimates and CIs — ggplot.resi","title":"Plotting RESI Estimates and CIs — ggplot.resi","text":"function uses ggplot2 graphics plot robust effect size (RESI) estimates confidence intervals `resi`, `summary_resi`, `anova_resi` objects.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/ggplot.resi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting RESI Estimates and CIs — ggplot.resi","text":"","code":"# S3 method for class 'resi' ggplot(data, mapping, alpha = NULL, error.bars = TRUE, ..., environment)"},{"path":"https://statimagcoll.github.io/RESI/reference/ggplot.resi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting RESI Estimates and CIs — ggplot.resi","text":"data Object `resi`, `summary_resi`, `anova_resi` class mapping Ignored, included consistency `ggplot` generic alpha Numeric, desired alpha level confidence intervals error.bars Logical, whether include end caps confidence intervals. Default = `TRUE` ... Ignored environment Ignored, included consistency `ggplot` generic","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/ggplot.resi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting RESI Estimates and CIs — ggplot.resi","text":"Returns ggplot RESI point estimates","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/ggplot.resi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting RESI Estimates and CIs — ggplot.resi","text":"","code":"# create a resi object resi_obj <- resi(lm(charges ~ region * age + bmi + sex, data = RESI::insurance), nboot = 10)  # plot ANOVA table ggplot2::ggplot(anova(resi_obj))"},{"path":"https://statimagcoll.github.io/RESI/reference/insurance.html","id":null,"dir":"Reference","previous_headings":"","what":"US Health Insurance Data — insurance","title":"US Health Insurance Data — insurance","text":"dataset 1338 observations health insurance charges demographic factors.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/insurance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US Health Insurance Data — insurance","text":"","code":"insurance"},{"path":"https://statimagcoll.github.io/RESI/reference/insurance.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"US Health Insurance Data — insurance","text":"data frame 1338 rows 7 variables: age age primary beneficiary years sex insurance contractor sex, male/female bmi body mass index children number dependents smoker smoker/non-smoker region beneficiary's region US charges individual medical costs billed health insurance","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/insurance.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"US Health Insurance Data — insurance","text":"https://www.kaggle.com/datasets/teertha/ushealthinsurancedataset","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/omnibus.html","id":null,"dir":"Reference","previous_headings":"","what":"Omnibus (Overall) Wald Test for resi objects — omnibus","title":"Omnibus (Overall) Wald Test for resi objects — omnibus","text":"running resi function fitted model, function can used print overall Wald test component. resi function run `store.boot = TRUE` option store full matrix bootstrapped estimates, user can specify different alpha level function's confidence intervals.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/omnibus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Omnibus (Overall) Wald Test for resi objects — omnibus","text":"","code":"omnibus(object, alpha = NULL, ...)"},{"path":"https://statimagcoll.github.io/RESI/reference/omnibus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Omnibus (Overall) Wald Test for resi objects — omnibus","text":"object object resulting resi function alpha optional new specification confidence level. Can vector-valued ... ignored","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/omnibus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Omnibus (Overall) Wald Test for resi objects — omnibus","text":"Returns `omnibus_resi` object containing computed omnibus Wald test","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/omnibus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Omnibus (Overall) Wald Test for resi objects — omnibus","text":"","code":"# fit a model mod = lm(charges ~ bmi + sex, data = RESI::insurance)  # run resi with the store.boot = TRUE option resi_obj = resi(mod, nboot = 100, store.boot = TRUE, alpha = 0.01)  # run summary, specifying a different alpha level if desired omnibus(resi_obj, alpha = 0.05) #>  #> Analysis of effect sizes based on RESI: #> Confidence level =  0.05  #>   Res.Df Df      F Pr(>F)   RESI   2.5%  97.5% #> 1   1337                                       #> 2   1335  2 24.338      0 0.1866 0.1418 0.2354"},{"path":"https://statimagcoll.github.io/RESI/reference/plot.resi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting RESI Estimates and CIs — plot.resi","title":"Plotting RESI Estimates and CIs — plot.resi","text":"function uses base graphics plot robust effect size (RESI) estimates confidence intervals `resi`, `summary_resi`, `anova_resi` objects.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/plot.resi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting RESI Estimates and CIs — plot.resi","text":"","code":"# S3 method for class 'resi' plot(   x,   alpha = NULL,   ycex.axis = NULL,   yaxis.args = list(),   automar = TRUE,   ... )"},{"path":"https://statimagcoll.github.io/RESI/reference/plot.resi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting RESI Estimates and CIs — plot.resi","text":"x Object `resi`, `summary_resi`, `anova_resi` class alpha Numeric, desired alpha level confidence intervals ycex.axis Numeric, scale specifically variable name labels yaxis.args List, arguments passed axis y-axis automar Logical, whether automatically adjust plotting margins accommodate variable names. Default = `TRUE` ... graphical parameters passed plot lines","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/plot.resi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting RESI Estimates and CIs — plot.resi","text":"Returns plot RESI point estimates","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/plot.resi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting RESI Estimates and CIs — plot.resi","text":"function creates forest-like plot RESI estimates variable factor. size left margin automatically adjusted (returned original plotting) unless `automar = FALSE`. Additional graphics parameters passed main plot function, confidence intervals. Arguments specifically y-axis (variable names) can specified using `yaxis.args`. manually adjust size y-axis labels without affecting x-axis, user can specify value `ycex.axis`.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/plot.resi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting RESI Estimates and CIs — plot.resi","text":"","code":"# create a resi object resi_obj <- resi(lm(charges ~ region * age + bmi + sex, data = RESI::insurance), nboot = 10)  # plot coefficients table, changing size of labels for both axes in the usual way plot(resi_obj, cex.axis = 0.7)   # plot ANOVA table, changing the size of just the y-axis plot(resi_obj, ycex.axis = 0.8)"},{"path":"https://statimagcoll.github.io/RESI/reference/resi.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust Effect Size Index (RESI) point and interval estimation for models — resi","title":"Robust Effect Size Index (RESI) point and interval estimation for models — resi","text":"function estimate robust effect size (RESI) Vandekar, Tao, & Blume (2020) confidence interval various ways fitted model object. overall RESI estimated via Wald test. RESI (optionally) estimated factor coefficients-style table. RESI (optionally) estimated variable/interaction Anova-style table models existing Anova methods. CIs can calculated using either non-parametric Bayesian bootstrapping.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/resi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust Effect Size Index (RESI) point and interval estimation for models — resi","text":"","code":"resi(model.full, ...)  # Default S3 method resi(   model.full,   model.reduced = NULL,   data,   anova = TRUE,   coefficients = TRUE,   overall = TRUE,   nboot = 1000,   boot.method = \"nonparam\",   vcovfunc = sandwich::vcovHC,   alpha = 0.05,   store.boot = FALSE,   Anova.args = list(),   vcov.args = list(),   unbiased = TRUE,   parallel = c(\"no\", \"multicore\", \"snow\"),   ncpus = getOption(\"boot.ncpus\", 1L),   long = FALSE,   clvar = NULL,   ... )  # S3 method for class 'glm' resi(   model.full,   model.reduced = NULL,   data,   anova = TRUE,   coefficients = TRUE,   overall = TRUE,   nboot = 1000,   vcovfunc = sandwich::vcovHC,   alpha = 0.05,   store.boot = FALSE,   Anova.args = list(),   vcov.args = list(),   unbiased = TRUE,   parallel = c(\"no\", \"multicore\", \"snow\"),   ncpus = getOption(\"boot.ncpus\", 1L),   ... )  # S3 method for class 'lm' resi(   model.full,   model.reduced = NULL,   data,   anova = TRUE,   coefficients = TRUE,   overall = TRUE,   nboot = 1000,   boot.method = \"nonparam\",   vcovfunc = sandwich::vcovHC,   alpha = 0.05,   store.boot = FALSE,   Anova.args = list(),   vcov.args = list(),   unbiased = TRUE,   parallel = c(\"no\", \"multicore\", \"snow\"),   ncpus = getOption(\"boot.ncpus\", 1L),   ... )  # S3 method for class 'nls' resi(   model.full,   model.reduced = NULL,   data,   coefficients = TRUE,   overall = TRUE,   nboot = 1000,   boot.method = \"nonparam\",   anova = FALSE,   vcovfunc = r_nlshc,   alpha = 0.05,   store.boot = FALSE,   vcov.args = list(),   unbiased = TRUE,   parallel = c(\"no\", \"multicore\", \"snow\"),   ncpus = getOption(\"boot.ncpus\", 1L),   ... )  # S3 method for class 'survreg' resi(   model.full,   model.reduced = NULL,   data,   anova = TRUE,   coefficients = TRUE,   overall = TRUE,   nboot = 1000,   vcovfunc = vcov,   alpha = 0.05,   store.boot = FALSE,   Anova.args = list(),   unbiased = TRUE,   parallel = c(\"no\", \"multicore\", \"snow\"),   ncpus = getOption(\"boot.ncpus\", 1L),   ... )  # S3 method for class 'coxph' resi(   model.full,   model.reduced = NULL,   data,   anova = TRUE,   coefficients = TRUE,   overall = TRUE,   nboot = 1000,   vcovfunc = vcov,   alpha = 0.05,   store.boot = FALSE,   Anova.args = list(),   unbiased = TRUE,   parallel = c(\"no\", \"multicore\", \"snow\"),   ncpus = getOption(\"boot.ncpus\", 1L),   ... )  # S3 method for class 'hurdle' resi(   model.full,   model.reduced = NULL,   data,   coefficients = TRUE,   overall = TRUE,   nboot = 1000,   vcovfunc = sandwich::sandwich,   anova = FALSE,   alpha = 0.05,   store.boot = FALSE,   vcov.args = list(),   unbiased = TRUE,   parallel = c(\"no\", \"multicore\", \"snow\"),   ncpus = getOption(\"boot.ncpus\", 1L),   ... )  # S3 method for class 'zeroinfl' resi(   model.full,   model.reduced = NULL,   data,   coefficients = TRUE,   overall = TRUE,   nboot = 1000,   vcovfunc = sandwich::sandwich,   anova = FALSE,   alpha = 0.05,   store.boot = FALSE,   vcov.args = list(),   unbiased = TRUE,   parallel = c(\"no\", \"multicore\", \"snow\"),   ncpus = getOption(\"boot.ncpus\", 1L),   ... )  # S3 method for class 'geeglm' resi(   model.full,   model.reduced = NULL,   data,   anova = TRUE,   coefficients = TRUE,   overall = TRUE,   nboot = 1000,   alpha = 0.05,   store.boot = FALSE,   unbiased = TRUE,   parallel = c(\"no\", \"multicore\", \"snow\"),   ncpus = getOption(\"boot.ncpus\", 1L),   ... )  # S3 method for class 'gee' resi(   model.full,   data,   nboot = 1000,   alpha = 0.05,   store.boot = FALSE,   unbiased = TRUE,   parallel = c(\"no\", \"multicore\", \"snow\"),   ncpus = getOption(\"boot.ncpus\", 1L),   ... )  # S3 method for class 'lme' resi(   model.full,   alpha = 0.05,   nboot = 1000,   anova = TRUE,   vcovfunc = clubSandwich::vcovCR,   vcov.args = list(),   ... )  # S3 method for class 'lmerMod' resi(   model.full,   alpha = 0.05,   nboot = 1000,   anova = TRUE,   vcovfunc = clubSandwich::vcovCR,   vcov.args = list(),   ... )"},{"path":"https://statimagcoll.github.io/RESI/reference/resi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robust Effect Size Index (RESI) point and interval estimation for models — resi","text":"model.full lm, glm, nls, survreg, coxph, hurdle, zeroinfl, gee, geeglm lme model object. ... Ignored. model.reduced Fitted model object type model.full. default `NULL`; model full model intercept. data Data.frame object coercible data.frame model.full data (required model types). anova Logical, whether produce Anova table RESI columns added. default = `TRUE`. coefficients Logical, whether produce coefficients (summary) table RESI columns added. default = `TRUE`. overall Logical, whether produce overall Wald test comparing full reduced model RESI columns added. default = `TRUE`. nboot Numeric, number bootstrap replicates. default, 1000. boot.method String, type bootstrap use: `nonparam` = non-parametric bootstrap (default); `bayes` = Bayesian bootstrap. vcovfunc variance estimator function constructing Wald test statistic. default, vcovHC (robust (sandwich) variance estimator). alpha Numeric, significance level constructed CIs. default, 0.05. store.boot Logical, whether store bootstrapped estimates. default, `FALSE`. Anova.args List, additional arguments passed Anova function. vcov.args List, additional arguments passed vcovfunc. unbiased Logical, whether use unbiased alternative T/Z statistic RESI conversion. default, `TRUE`. See details. parallel See documentation boot. ncpus See documentation boot. long Logical, whether data longitudinal/clustered. default, `FALSE`. clvar Character, name cluster/id variable data clustered. default, `NULL`.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/resi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robust Effect Size Index (RESI) point and interval estimation for models — resi","text":"Returns list includes function arguments, RESI point estimates, confidence intervals coefficients/anova-style tables","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/resi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Robust Effect Size Index (RESI) point and interval estimation for models — resi","text":"RESI, denoted S, applicable across many model types. unitless index can easily compared across models. RESI can also converted Cohen's d (S2d)  model homoskedasticity. function computes RESI point estimates bootstrapped confidence intervals based Chi-square, F, T, Z statistics. robust (sandwich) variance used default, allowing consistency model-misspecification. RESI related non-centrality parameter test statistic. RESI estimate consistent four (Chi-square, F, T, Z) types statistics used. Chi-square F-based calculations rely asymptotic theory, may biased small samples. possible, T Z statistics used. two formulas T Z statistic conversion. first (default, unbiased = TRUE) based solving expected value T Z statistic RESI. alternative based squaring T Z statistic using F Chi-square statistic conversion. methods consistent, alternative exhibits notable amount finite sample bias. alternative may appealing absolute value equal RESI based F Chi-square statistic. RESI based Chi-Square F statistics always greater equal 0. type statistic used listed output. See f2S, chisq2S, t2S, z2S details formulas. GEE (geeglm) models, longitudinal RESI (L-RESI) cross-sectional, per-measurement RESI (CS-RESI) estimated. longitudinal RESI takes specified clustering account, cross-sectional RESI estimated using model measurement cluster. lm nls model types, Bayesian bootstrap option available alternative default, standard non-parametric bootstrap. interpretation Bayesian bootstrapped interval similar credible interval. Certain model types require data used model entered argument. : nls, survreg, coxph. Additionally, model includes certain functions (splines, factor, ), data needs provided. running convergence issues nls models, advised refit nls model starting values equal estimates provided model try rerunning resi.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/resi.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Robust Effect Size Index (RESI) point and interval estimation for models — resi","text":"resi(default): RESI point interval estimation models resi(glm): RESI point interval estimation models resi(lm): RESI point interval estimation lm models resi(nls): RESI point interval estimation nls models resi(survreg): RESI point interval estimation survreg models resi(coxph): RESI point interval estimation coxph models resi(hurdle): RESI point interval estimation hurdle models resi(zeroinfl): RESI point interval estimation zeroinfl models resi(geeglm): RESI point interval estimation GEE models resi(gee): RESI point interval estimation GEE models resi(lme): RESI point interval estimation LME (nlme) models resi(lmerMod): RESI point interval estimation lmerMod models","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/resi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Robust Effect Size Index (RESI) point and interval estimation for models — resi","text":"Vandekar S, Tao R, Blume J. Robust Effect Size Index. Psychometrika. 2020 Mar;85(1):232-246. doi: 10.1007/s11336-020-09698-2. Kang, K., Armstrong, K., Avery, S., McHugo, M., Heckers, S., & Vandekar, S. (2021). Accurate confidence interval estimation non-centrality parameters effect size indices. arXiv preprint arXiv:2111.05966. Jones, M., Kang, K., Vandekar, S. (2025). Journal Statistical Software. RESI: R Package Robust Effect Sizes.<doi:10.18637/jss.v112.i03>","code":""},{"path":[]},{"path":"https://statimagcoll.github.io/RESI/reference/resi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Robust Effect Size Index (RESI) point and interval estimation for models — resi","text":"","code":"## for timing purposes, a small number of bootstrap replicates is used in the ## examples. Run them with a higher or default `nboot` argument for better performance  ## RESI on a linear model # fit linear model mod = lm(charges ~ region * age + bmi + sex, data = RESI::insurance)  # run resi on fitted model with desired number of bootstrap replicates # store bootstrap results for calculating different CIs later resi_obj = resi(mod, nboot = 50, store.boot = TRUE) # print output resi_obj #>  #> Analysis of effect sizes based on RESI: #> Confidence level =  0.05 #> Call:  lm(formula = charges ~ region * age + bmi + sex, data = RESI::insurance) #>  #> Coefficient Table  #>                       Estimate Std. Error t value Pr(>|t|)    RESI    2.5% #> (Intercept)         -5359.4352  2175.9439 -2.4630   0.0139 -0.0673 -0.1130 #> regionnorthwest     -2339.4433  2395.1507 -0.9767   0.3289 -0.0267 -0.0679 #> regionsoutheast     -3230.8512  2643.1099 -1.2224   0.2218 -0.0334 -0.0802 #> regionsouthwest      -232.4839  2574.2823 -0.0903   0.9281 -0.0025 -0.0536 #> age                   220.3325    40.2091  5.4797   0.0000  0.1497  0.1014 #> bmi                   323.7725    58.0849  5.5741   0.0000  0.1523  0.1063 #> sexmale              1328.0215   621.7421  2.1360   0.0329  0.0584  0.0004 #> regionnorthwest:age    34.9040    57.2364  0.6098   0.5421  0.0167 -0.0327 #> regionsoutheast:age    83.6359    63.3258  1.3207   0.1868  0.0361 -0.0096 #> regionsouthwest:age   -33.6290    61.4065 -0.5476   0.5840 -0.0150 -0.0650 #>                       97.5% #> (Intercept)         -0.0110 #> regionnorthwest      0.0114 #> regionsoutheast      0.0043 #> regionsouthwest      0.0448 #> age                  0.2054 #> bmi                  0.1920 #> sexmale              0.0969 #> regionnorthwest:age  0.0549 #> regionsoutheast:age  0.0850 #> regionsouthwest:age  0.0399 #>  #>  #> Analysis of Deviance Table (Type II tests) #>  #> Response: charges #>            Df        F Pr(>F)   RESI   2.5%  97.5% #> region      3   1.5959 0.1886 0.0365 0.0000 0.1163 #> age         1 117.7046 0.0000 0.2951 0.2447 0.3498 #> bmi         1  31.0708 0.0000 0.1498 0.1027 0.1900 #> sex         1   4.5624 0.0329 0.0515 0.0000 0.0929 #> region:age  3   1.1167 0.3412 0.0161 0.0000 0.0846 #>  #> Overall RESI comparing model to intercept-only model: #>  #>   Res.Df Df       F Pr(>F)   RESI 2.5%  97.5% #> 1   1328  9 20.2486      0 0.3595 0.33 0.4184 #>  #> Notes: #> 1. The RESI was calculated using a robust covariance estimator. #> 2. Confidence intervals (CIs) constructed using 50 non-parametric bootstraps.   # fit a reduced model for comparison mod_red = lm(charges ~ bmi, data = RESI::insurance)  # running resi and including the reduced model will provide almost the exact same # output as not including a reduced model. The difference is that the \"overall\" # portion of the output will compare the full model to the reduced model. # The \"summary\" and \"anova\" RESI estimates will be the same. (The bootstrapped # confidence intervals may differ.) resi(model.full = mod, model.reduced = mod_red, nboot = 10) #>  #> Analysis of effect sizes based on RESI: #> Confidence level =  0.05 #> Full Model:lm(formula = charges ~ region * age + bmi + sex, data = RESI::insurance) #> Reduced Model:lm(formula = charges ~ bmi, data = RESI::insurance) #>  #>  #> Coefficient Table  #>                       Estimate Std. Error t value Pr(>|t|)    RESI    2.5% #> (Intercept)         -5359.4352  2175.9439 -2.4630   0.0139 -0.0673 -0.0984 #> regionnorthwest     -2339.4433  2395.1507 -0.9767   0.3289 -0.0267 -0.0617 #> regionsoutheast     -3230.8512  2643.1099 -1.2224   0.2218 -0.0334 -0.0951 #> regionsouthwest      -232.4839  2574.2823 -0.0903   0.9281 -0.0025 -0.0559 #> age                   220.3325    40.2091  5.4797   0.0000  0.1497  0.0919 #> bmi                   323.7725    58.0849  5.5741   0.0000  0.1523  0.1077 #> sexmale              1328.0215   621.7421  2.1360   0.0329  0.0584 -0.0036 #> regionnorthwest:age    34.9040    57.2364  0.6098   0.5421  0.0167 -0.0261 #> regionsoutheast:age    83.6359    63.3258  1.3207   0.1868  0.0361  0.0245 #> regionsouthwest:age   -33.6290    61.4065 -0.5476   0.5840 -0.0150 -0.0440 #>                       97.5% #> (Intercept)          0.0044 #> regionnorthwest      0.0040 #> regionsoutheast     -0.0238 #> regionsouthwest      0.0143 #> age                  0.1760 #> bmi                  0.1692 #> sexmale              0.0979 #> regionnorthwest:age  0.0482 #> regionsoutheast:age  0.0925 #> regionsouthwest:age  0.0227 #>  #>  #> Analysis of Deviance Table (Type II tests) #>  #> Response: charges #>            Df        F Pr(>F)   RESI   2.5%  97.5% #> region      3   1.5959 0.1886 0.0365 0.0091 0.1067 #> age         1 117.7046 0.0000 0.2951 0.2534 0.3349 #> bmi         1  31.0708 0.0000 0.1498 0.1041 0.1670 #> sex         1   4.5624 0.0329 0.0515 0.0039 0.0939 #> region:age  3   1.1167 0.3412 0.0161 0.0249 0.0966 #>  #> Overall RESI comparing full model to reduced model: #>  #>   Res.Df Df       F Pr(>F)   RESI   2.5%  97.5% #> 1   1328  8 15.9113      0 0.2983 0.2842 0.3461 #>  #> Notes: #> 1. The RESI was calculated using a robust covariance estimator. #> 2. Confidence intervals (CIs) constructed using 10 non-parametric bootstraps.   # used stored bootstrap results to get a different alpha-level confidence interval summary(resi_obj, alpha = c(0.01, 0.1)) #>  #> Analysis of effect sizes based on RESI: #> Confidence level =  0.01 0.1 #> Call:  lm(formula = charges ~ region * age + bmi + sex, data = RESI::insurance) #>  #> Coefficient Table  #>                       Estimate Std. Error t value Pr(>|t|)    RESI    0.5% #> (Intercept)         -5359.4352  2175.9439 -2.4630   0.0139 -0.0673 -0.1137 #> regionnorthwest     -2339.4433  2395.1507 -0.9767   0.3289 -0.0267 -0.0773 #> regionsoutheast     -3230.8512  2643.1099 -1.2224   0.2218 -0.0334 -0.0970 #> regionsouthwest      -232.4839  2574.2823 -0.0903   0.9281 -0.0025 -0.0892 #> age                   220.3325    40.2091  5.4797   0.0000  0.1497  0.0946 #> bmi                   323.7725    58.0849  5.5741   0.0000  0.1523  0.0846 #> sexmale              1328.0215   621.7421  2.1360   0.0329  0.0584 -0.0019 #> regionnorthwest:age    34.9040    57.2364  0.6098   0.5421  0.0167 -0.0376 #> regionsoutheast:age    83.6359    63.3258  1.3207   0.1868  0.0361 -0.0188 #> regionsouthwest:age   -33.6290    61.4065 -0.5476   0.5840 -0.0150 -0.0728 #>                          5%     95%   99.5% #> (Intercept)         -0.1082 -0.0244 -0.0039 #> regionnorthwest     -0.0653  0.0061  0.0275 #> regionsoutheast     -0.0707  0.0014  0.0097 #> regionsouthwest     -0.0510  0.0407  0.0608 #> age                  0.1144  0.1943  0.2165 #> bmi                  0.1122  0.1850  0.1991 #> sexmale              0.0029  0.0942  0.1057 #> regionnorthwest:age -0.0194  0.0504  0.0584 #> regionsoutheast:age -0.0066  0.0783  0.0942 #> regionsouthwest:age -0.0585  0.0317  0.0720 car::Anova(resi_obj, alpha = c(0.01, 0.1)) #>            Df        F  Pr(>F)     RESI    0.5%      5%     95%   99.5% #> region      3   1.5959 0.18856 0.036480 0.00000 0.00000 0.09844 0.12066 #> age         1 117.7046 0.00000 0.295111 0.24198 0.25091 0.34462 0.36491 #> bmi         1  31.0708 0.00000 0.149798 0.07994 0.10878 0.18295 0.19720 #> sex         1   4.5624 0.03286 0.051549 0.00000 0.00000 0.09015 0.10204 #> region:age  3   1.1167 0.34115 0.016056 0.00000 0.00000 0.07739 0.10251  # the result of resi, as well as the summary or Anova of a `resi` object can be plotted # if the resi object was created with the store.boot = `TRUE` option, any alpha # can be specified plot(resi_obj, alpha = 0.01)  # if the variable names on the y-axis are too long, you can reduce their size with # the ycex.axis argument (or use regular common solutions like changing the margins) plot(resi_obj, alpha = 0.01, ycex.axis = 0.5)   # for some model types and formula structures, data argument is required if(requireNamespace(\"splines\")){   # fit logistic regression model with splines   mod = glm(smoker ~ splines::ns(age, df = 3) + region, data = RESI::insurance,     family = \"binomial\")    # specify additional arguments to the variance-covariance function via vcov.args   resi_obj = resi(mod, data = RESI::insurance, alpha = 0.01,     vcov.args = list(type = \"HC0\"), nboot = 25)   summary(resi_obj)   car::Anova(resi_obj)} #> Loading required namespace: splines #> Analysis of Deviance Table (Type II tests) #>  #> Response: smoker #>                          Df  Chisq Pr(>Chisq)     RESI 0.5%    99.5% #> splines::ns(age, df = 3)  3 1.4735    0.68841 0.000000    0 0.067399 #> region                    3 7.2960    0.06304 0.056663    0 0.125650   ## RESI on a survival model with alternate Z2S if(requireNamespace(\"survival\")){   # fit coxph model on example data from survival package   # Note: for survival models, you need to specify robust variance in the model   # creation. resi will ignore the vcovfunc argument for this reason.   mod.coxph =  survival::coxph(survival::Surv(time, status) ~ age + sex + wt.loss,    data=survival::lung, robust = TRUE)    # run resi on the model   # to use the alternative Z to RESI formula (which is equal in absolute value to the   # chi-square to RESI (S) formula), specify unbiased = FALSE.   resi(mod.coxph, data = survival::lung, unbiased = FALSE, nboot = 10)} #> Loading required namespace: survival #>  #> Analysis of effect sizes based on RESI: #> Confidence level =  0.05 #> Call:  survival::coxph(formula = survival::Surv(time, status) ~ age +  #>     sex + wt.loss, data = survival::lung, robust = TRUE) #>  #> Coefficient Table  #>         Estimate Std. Error z value Pr(>|z|)    RESI    2.5%   97.5% #> age       0.0201     0.0101  1.9915   0.0464  0.1177  0.0095  0.2474 #> sex      -0.5210     0.1670 -3.1202   0.0018 -0.2020 -0.3383 -0.0123 #> wt.loss   0.0008     0.0060  0.1264   0.8994  0.0000 -0.0688  0.0762 #>  #>  #> Analysis of Deviance Table (Type II tests) #>  #> Response: survival::Surv(time, status) #>         Df  Chisq Pr(>Chisq)   RESI   2.5%  97.5% #> age      1 3.9662     0.0464 0.1177 0.0095 0.2474 #> sex      1 9.7357     0.0018 0.2020 0.0123 0.3383 #> wt.loss  1 0.0160     0.8994 0.0000 0.0000 0.0864 #>  #> Overall RESI comparing model to intercept-only model: #>  #>      chi2 df      P   RESI   2.5%  97.5% #> 1 13.7717  3 0.0032 0.2244 0.0468 0.3965 #>  #> Notes: #> 1. The RESI was calculated using a robust covariance estimator. #> 2. Confidence intervals (CIs) constructed using 10 non-parametric bootstraps."},{"path":"https://statimagcoll.github.io/RESI/reference/resi_pe.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust Effect Size Index (RESI) Point Estimation — resi_pe","title":"Robust Effect Size Index (RESI) Point Estimation — resi_pe","text":"function estimate robust effect size (RESI) Vandekar, Tao, & Blume (2020). overall RESI estimated via Wald test. RESI (optionally) estimated factor coefficients-style table. RESI (optionally) estimated variable/interaction Anova-style table models existing Anova methods. function building block resi function.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/resi_pe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust Effect Size Index (RESI) Point Estimation — resi_pe","text":"","code":"resi_pe(model.full, ...)  # Default S3 method resi_pe(   model.full,   model.reduced = NULL,   data,   anova = TRUE,   coefficients = TRUE,   overall = TRUE,   vcovfunc = sandwich::vcovHC,   Anova.args = list(),   vcov.args = list(),   unbiased = TRUE,   waldtype = 0,   ... )  # S3 method for class 'glm' resi_pe(   model.full,   model.reduced = NULL,   data,   anova = TRUE,   coefficients = TRUE,   overall = TRUE,   vcovfunc = sandwich::vcovHC,   Anova.args = list(),   vcov.args = list(),   unbiased = TRUE,   waldtype = 0,   ... )  # S3 method for class 'lm' resi_pe(   model.full,   model.reduced = NULL,   data,   anova = TRUE,   coefficients = TRUE,   vcovfunc = sandwich::vcovHC,   Anova.args = list(),   vcov.args = list(),   unbiased = TRUE,   overall = TRUE,   ... )  # S3 method for class 'nls' resi_pe(   model.full,   model.reduced = NULL,   data,   coefficients = TRUE,   anova = FALSE,   vcovfunc = r_nlshc,   vcov.args = list(),   unbiased = TRUE,   overall = TRUE,   ... )  # S3 method for class 'survreg' resi_pe(   model.full,   model.reduced = NULL,   data,   anova = TRUE,   coefficients = TRUE,   vcovfunc = vcov,   Anova.args = list(),   unbiased = TRUE,   overall = TRUE,   ... )  # S3 method for class 'coxph' resi_pe(   model.full,   model.reduced = NULL,   data,   anova = TRUE,   coefficients = TRUE,   vcovfunc = vcov,   Anova.args = list(),   unbiased = TRUE,   overall = TRUE,   ... )  # S3 method for class 'hurdle' resi_pe(   model.full,   model.reduced = NULL,   data,   coefficients = TRUE,   anova = TRUE,   vcovfunc = sandwich::sandwich,   vcov.args = list(),   unbiased = TRUE,   overall = TRUE,   ... )  # S3 method for class 'zeroinfl' resi_pe(   model.full,   model.reduced = NULL,   data,   coefficients = TRUE,   anova = TRUE,   vcovfunc = sandwich::sandwich,   vcov.args = list(),   unbiased = TRUE,   overall = TRUE,   ... )  # S3 method for class 'geeglm' resi_pe(   model.full,   model.reduced = NULL,   data,   anova = TRUE,   coefficients = TRUE,   overall = TRUE,   unbiased = TRUE,   ... )  # S3 method for class 'gee' resi_pe(model.full, data, unbiased = TRUE, ...)  # S3 method for class 'lme' resi_pe(   model.full,   anova = TRUE,   vcovfunc = clubSandwich::vcovCR,   Anova.args = list(),   vcov.args = list(),   ... )  # S3 method for class 'lmerMod' resi_pe(   model.full,   anova = TRUE,   vcovfunc = clubSandwich::vcovCR,   Anova.args = list(),   vcov.args = list(),   ... )"},{"path":"https://statimagcoll.github.io/RESI/reference/resi_pe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robust Effect Size Index (RESI) Point Estimation — resi_pe","text":"model.full lm, glm, nls, survreg, coxph, hurdle, zeroinfl, gee, geeglm lme model object. ... Ignored. model.reduced Fitted model object type model.full. default `NULL`; model full model intercept. data Data.frame object coercible data.frame model.full data (required model types). anova Logical, whether produce Anova table RESI columns added. default = `TRUE`. coefficients Logical, whether produce coefficients (summary) table RESI columns added. default = `TRUE`. overall Logical, whether produce overall Wald test comparing full reduced model RESI columns added. default = `TRUE`. vcovfunc variance estimator function constructing Wald test statistic. default, sandwich::vcovHC (robust (sandwich) variance estimator). Anova.args List, additional arguments passed Anova function. vcov.args List, additional arguments passed vcovfunc. unbiased Logical, whether use unbiased alternative T/Z statistic RESI conversion. default, `TRUE`. See details. waldtype Numeric, indicates function use overall Wald test. 0 (default) = lmtest::waldtest Chi-square, 1 = lmtest::waldtest F, 2 = aod::wald.test","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/resi_pe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robust Effect Size Index (RESI) Point Estimation — resi_pe","text":"Returns list containing RESI point estimates","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/resi_pe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Robust Effect Size Index (RESI) Point Estimation — resi_pe","text":"Robust Effect Size Index (RESI) effect size measure based M-estimators. function called resi specified number times form bootstrapped confidence intervals. Called , function calculate point estimates. RESI, denoted S, applicable across many model types. unitless index can easily compared across models. RESI can also converted Cohen's d (S2d) model homoskedasticity. RESI related non-centrality parameter test statistic. RESI estimate consistent four (Chi-square, F, T, Z) types statistics used. Chi-square F-based calculations rely asymptotic theory, may biased small samples. possible, T Z statistics used. two formulas T Z statistic conversion. first (default, unbiased = TRUE) based solving expected value T Z statistic RESI. alternative based squaring T Z statistic using F Chi-square statistic conversion. methods consistent, alternative exhibits notable amount finite sample bias. alternative may appealing absolute value equal RESI based F Chi-square statistic. RESI based Chi-Square F statistics always greater equal 0. type statistic used listed output. See f2S, chisq2S, t2S, z2S details formulas. GEE (geeglm) models, longitudinal RESI (L-RESI) cross-sectional, per-measurement RESI (CS-RESI) estimated. longitudinal RESI takes specified clustering account, cross-sectional RESI estimated using model measurement cluster.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/resi_pe.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Robust Effect Size Index (RESI) Point Estimation — resi_pe","text":"resi_pe(default): RESI point estimation resi_pe(glm): RESI point estimation generalized linear models resi_pe(lm): RESI point estimation linear models resi_pe(nls): RESI point estimation nonlinear least squares models resi_pe(survreg): RESI point estimation survreg resi_pe(coxph): RESI point estimation coxph models resi_pe(hurdle): RESI point estimation hurdle models resi_pe(zeroinfl): RESI point estimation zeroinfl models resi_pe(geeglm): RESI point estimation geeglm object resi_pe(gee): RESI point estimation gee object resi_pe(lme): RESI point estimation lme object resi_pe(lmerMod): RESI point estimation lmerMod object","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/resi_pe.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Robust Effect Size Index (RESI) Point Estimation — resi_pe","text":"Vandekar S, Tao R, Blume J. Robust Effect Size Index. Psychometrika. 2020 Mar;85(1):232-246. doi: 10.1007/s11336-020-09698-2.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/resi_pe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Robust Effect Size Index (RESI) Point Estimation — resi_pe","text":"","code":"# This function produces point estimates for the RESI. The resi function will # provide the same point estimates but adds confidence intervals. See resi for # more detailed examples.  ## resi_pe for a linear model # fit linear model mod <- lm(charges ~ region * age + bmi + sex, data = RESI::insurance) # run resi_pe on the model resi_pe(mod) #>  #> Analysis of effect sizes based on RESI: #> Confidence level =  #> Call:  lm(formula = charges ~ region * age + bmi + sex, data = RESI::insurance) #>  #> Coefficient Table  #>                       Estimate Std. Error t value Pr(>|t|)    RESI #> (Intercept)         -5359.4352  2175.9439 -2.4630   0.0139 -0.0673 #> regionnorthwest     -2339.4433  2395.1507 -0.9767   0.3289 -0.0267 #> regionsoutheast     -3230.8512  2643.1099 -1.2224   0.2218 -0.0334 #> regionsouthwest      -232.4839  2574.2823 -0.0903   0.9281 -0.0025 #> age                   220.3325    40.2091  5.4797   0.0000  0.1497 #> bmi                   323.7725    58.0849  5.5741   0.0000  0.1523 #> sexmale              1328.0215   621.7421  2.1360   0.0329  0.0584 #> regionnorthwest:age    34.9040    57.2364  0.6098   0.5421  0.0167 #> regionsoutheast:age    83.6359    63.3258  1.3207   0.1868  0.0361 #> regionsouthwest:age   -33.6290    61.4065 -0.5476   0.5840 -0.0150 #>  #>  #> Analysis of Deviance Table (Type II tests) #>  #> Response: charges #>            Df        F Pr(>F)   RESI #> region      3   1.5959 0.1886 0.0365 #> age         1 117.7046 0.0000 0.2951 #> bmi         1  31.0708 0.0000 0.1498 #> sex         1   4.5624 0.0329 0.0515 #> region:age  3   1.1167 0.3412 0.0161 #>  #> Overall RESI comparing model to intercept-only model: #>  #>   Res.Df Df       F Pr(>F)   RESI #> 1   1328  9 20.2486      0 0.3595 #>  #> Notes: #> 1. The RESI was calculated using a robust covariance estimator.  # if you want to have RESI estimates in the coefficient table that are equal in absolute # value to those in the Anova table (except for those with >1 df and/or included in other # interaction terms), you can specify unbiased = FALSE to use the alternate conversion. resi_pe(mod, unbiased = FALSE) #>  #> Analysis of effect sizes based on RESI: #> Confidence level =  #> Call:  lm(formula = charges ~ region * age + bmi + sex, data = RESI::insurance) #>  #> Coefficient Table  #>                       Estimate Std. Error t value Pr(>|t|)    RESI #> (Intercept)         -5359.4352  2175.9439 -2.4630   0.0139 -0.0615 #> regionnorthwest     -2339.4433  2395.1507 -0.9767   0.3289  0.0000 #> regionsoutheast     -3230.8512  2643.1099 -1.2224   0.2218 -0.0192 #> regionsouthwest      -232.4839  2574.2823 -0.0903   0.9281  0.0000 #> age                   220.3325    40.2091  5.4797   0.0000  0.1472 #> bmi                   323.7725    58.0849  5.5741   0.0000  0.1498 #> sexmale              1328.0215   621.7421  2.1360   0.0329  0.0515 #> regionnorthwest:age    34.9040    57.2364  0.6098   0.5421  0.0000 #> regionsoutheast:age    83.6359    63.3258  1.3207   0.1868  0.0235 #> regionsouthwest:age   -33.6290    61.4065 -0.5476   0.5840  0.0000 #>  #>  #> Analysis of Deviance Table (Type II tests) #>  #> Response: charges #>            Df        F Pr(>F)   RESI #> region      3   1.5959 0.1886 0.0365 #> age         1 117.7046 0.0000 0.2951 #> bmi         1  31.0708 0.0000 0.1498 #> sex         1   4.5624 0.0329 0.0515 #> region:age  3   1.1167 0.3412 0.0161 #>  #> Overall RESI comparing model to intercept-only model: #>  #>   Res.Df Df       F Pr(>F)   RESI #> 1   1328  9 20.2486      0 0.3595 #>  #> Notes: #> 1. The RESI was calculated using a robust covariance estimator."},{"path":"https://statimagcoll.github.io/RESI/reference/summary.resi.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for resi objects — summary.resi","title":"Summary method for resi objects — summary.resi","text":"running resi function fitted model, function can used print coefficients table component. resi function run `store.boot = TRUE` option store full matrix bootstrapped estimates, user can specify different alpha level function's confidence intervals.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/summary.resi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for resi objects — summary.resi","text":"","code":"# S3 method for class 'resi' summary(object, alpha = NULL, ...)"},{"path":"https://statimagcoll.github.io/RESI/reference/summary.resi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for resi objects — summary.resi","text":"object object resulting resi function alpha optional new specification confidence level. Can vector-valued ... ignored","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/summary.resi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for resi objects — summary.resi","text":"Returns `summary_resi` object containing computed coefficients table","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/summary.resi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary method for resi objects — summary.resi","text":"","code":"# fit a model mod = lm(charges ~ bmi + sex, data = RESI::insurance)  # run resi with the store.boot = TRUE option resi_obj = resi(mod, nboot = 100, store.boot = TRUE, alpha = 0.01)  # run summary, specifying a different alpha level if desired summary(resi_obj, alpha = 0.05) #>  #> Analysis of effect sizes based on RESI: #> Confidence level =  0.05 #> Call:  lm(formula = charges ~ bmi + sex, data = RESI::insurance) #>  #> Coefficient Table  #>              Estimate Std. Error t value Pr(>|t|)   RESI    2.5%  97.5% #> (Intercept)  739.4306  1669.9119  0.4428   0.6580 0.0121 -0.0314 0.0623 #> bmi          389.4347    57.8612  6.7305   0.0000 0.1839  0.1383 0.2284 #> sexmale     1166.9940   647.9397  1.8011   0.0719 0.0492 -0.0024 0.0936"},{"path":"https://statimagcoll.github.io/RESI/reference/t2S.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the robust effect size index estimate from t statistic (default) — t2S","title":"Compute the robust effect size index estimate from t statistic (default) — t2S","text":"function computes robust effect size index Vandekar, Tao, & Blume (2020). Vector arguments accepted. different length arguments passed dealt usual way R.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/t2S.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the robust effect size index estimate from t statistic (default) — t2S","text":"","code":"t2S(t, rdf, n, unbiased = TRUE)"},{"path":"https://statimagcoll.github.io/RESI/reference/t2S.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the robust effect size index estimate from t statistic (default) — t2S","text":"t t statistic parameter interest. rdf Model residual degrees freedom/degrees freedom t statistic. n Number independent samples. unbiased Logical, whether use unbiased alternative estimator. See details.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/t2S.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the robust effect size index estimate from t statistic (default) — t2S","text":"Returns scalar vector argument robust effect size index estimate.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/t2S.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the robust effect size index estimate from t statistic (default) — t2S","text":"function computes S, RESI, t statistic. formula unbiased estimator (default) derived solving expected value t statistic S. unbiased consistent. formula unbiased conversion : \\(S = (t * \\sqrt(2) * \\Gamma(rdf/2)) / (\\sqrt(n * rdf) * \\Gamma((rdf - 1)/2))\\) formula alternative estimator derived squaring t statistic using f2S formula. estimator may appealing intuitive relationship F statistic; absolute value RESI estimates using formula equal RESI estimate using F statistic model. However, estimator finite sample bias, important consideration coverage bootstrapping resi uses. formula alternative conversion : \\( \\sqrt(max(0, (t^2 * (rdf - 2)/rdf - 1)/rdf))\\)","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/t2S.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the robust effect size index estimate from t statistic (default) — t2S","text":"","code":"# to obtain t values, first fit a lm mod = lm(charges ~ region * age + bmi + sex, data = RESI::insurance) # run lmtest::coeftest to get t values, using a robust variance-covariance formula ts = lmtest::coeftest(mod, vcov. = sandwich::vcovHC)[,'t value']  # get RESI estimates using unbiased estimator t2S(ts, n = nrow(RESI::insurance), rdf = mod$df.residual) #>         (Intercept)     regionnorthwest     regionsoutheast     regionsouthwest  #>        -0.067297337        -0.026687397        -0.033398602        -0.002467535  #>                 age                 bmi             sexmale regionnorthwest:age  #>         0.149720414         0.152301107         0.058360820         0.016662071  #> regionsoutheast:age regionsouthwest:age  #>         0.036086004        -0.014963251   # get RESI estimates using alternative estimator t2S(ts, n = nrow(RESI::insurance), rdf = mod$df.residual, unbiased = FALSE) #>         (Intercept)     regionnorthwest     regionsoutheast     regionsouthwest  #>         -0.06148040          0.00000000         -0.01917451          0.00000000  #>                 age                 bmi             sexmale regionnorthwest:age  #>          0.14717461          0.14979819          0.05154917          0.00000000  #> regionsoutheast:age regionsouthwest:age  #>          0.02354410          0.00000000"},{"path":"https://statimagcoll.github.io/RESI/reference/z2S.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the robust effect size index estimate from Z statistic — z2S","title":"Compute the robust effect size index estimate from Z statistic — z2S","text":"function computes robust effect size index Vandekar, Tao, & Blume (2020). Vector arguments accepted. different length arguments passed dealt usual way R.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/z2S.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the robust effect size index estimate from Z statistic — z2S","text":"","code":"z2S(z, n, unbiased = TRUE)"},{"path":"https://statimagcoll.github.io/RESI/reference/z2S.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the robust effect size index estimate from Z statistic — z2S","text":"z Z statistic parameter interest. n Number independent samples. unbiased Logical, whether use unbiased alternative estimator. See details.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/z2S.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the robust effect size index estimate from Z statistic — z2S","text":"Returns scalar vector argument robust effect size index estimate.","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/z2S.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the robust effect size index estimate from Z statistic — z2S","text":"function computes S, RESI, Z statistic. formula unbiased estimator (default) derived solving expected value Z statistic S. unbiased consistent. formula unbiased conversion : \\(S = Z/\\sqrt(n)\\) formula alternative estimator derived squaring Z statistic using chisq2S formula. estimator may appealing intuitive relationship Chi-square statistic; absolute value RESI estimates using formula equal RESI estimate using Chi-square statistic model. However, estimator finite sample bias, important consideration coverage bootstrapping resi uses. formula alternative conversion : \\( \\sqrt(max(0, (Z^2 - 1)/n)) * sign(Z)\\)","code":""},{"path":"https://statimagcoll.github.io/RESI/reference/z2S.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the robust effect size index estimate from Z statistic — z2S","text":"","code":"# to obtain example z values, first fit a glm mod = glm(charges ~ region * age + bmi + sex, data = RESI::insurance) # run coeftest to get z values using a robust variance-covariance function zs = lmtest::coeftest(mod, vcov. = sandwich::vcovHC)[,'z value']  # get RESI estimates using unbiased estimator z2S(zs, n = nrow(RESI::insurance)) #>         (Intercept)     regionnorthwest     regionsoutheast     regionsouthwest  #>         -0.06733537         -0.02670248         -0.03341748         -0.00246893  #>                 age                 bmi             sexmale regionnorthwest:age  #>          0.14980504          0.15238719          0.05839381          0.01667149  #> regionsoutheast:age regionsouthwest:age  #>          0.03610640         -0.01497171   # get RESI estimates usng alternative estimator z2S(zs, n = nrow(RESI::insurance), unbiased = FALSE) #> Warning: NaNs produced #>         (Intercept)     regionnorthwest     regionsoutheast     regionsouthwest  #>         -0.06153591          0.00000000         -0.01921832          0.00000000  #>                 age                 bmi             sexmale regionnorthwest:age  #>          0.14728939          0.14991488          0.05159896          0.00000000  #> regionsoutheast:age regionsouthwest:age  #>          0.02358576          0.00000000"},{"path":"https://statimagcoll.github.io/RESI/news/index.html","id":"resi-125","dir":"Changelog","previous_headings":"","what":"RESI 1.2.5","title":"RESI 1.2.5","text":"Added citation Journal Statistical Software paper doi:10.18637/jss.v112.i03 Bug fix cluster bootstrapping: Now correctly assigns clustered IDs bootstrap Minor documentation updates","code":""},{"path":"https://statimagcoll.github.io/RESI/news/index.html","id":"resi-124","dir":"Changelog","previous_headings":"","what":"RESI 1.2.4","title":"RESI 1.2.4","text":"CRAN release: 2024-01-16 Minor bug documentation fixes Website deployed","code":""},{"path":"https://statimagcoll.github.io/RESI/news/index.html","id":"resi-120","dir":"Changelog","previous_headings":"","what":"RESI 1.2.0","title":"RESI 1.2.0","text":"CRAN release: 2023-06-09 boot.results element resi object contains full boot object Allows parallelization Updated geeglm/gee methods Revamped plot.resi function Added ggplot methods Added omnibus function extract overall Wald test resi object Combined t2S t2S_alt t2S z2S z2S_alt z2S Substantially reduced code duplication methods Expanded error checking messaging Fixed error resi using model one predictor Various typo fixes cleaned documentation","code":""},{"path":"https://statimagcoll.github.io/RESI/news/index.html","id":"resi-111","dir":"Changelog","previous_headings":"","what":"RESI 1.1.1","title":"RESI 1.1.1","text":"CRAN release: 2023-03-22 Minor argument consistency fix","code":""},{"path":"https://statimagcoll.github.io/RESI/news/index.html","id":"resi-110","dir":"Changelog","previous_headings":"","what":"RESI 1.1.0","title":"RESI 1.1.0","text":"CRAN release: 2023-02-10 gee geeglm reporting valid confidence intervals gee geeglm report longitudinal RESI estimate cross-sectional RESI estimate lme lmerMod reports point estimates longitudinal RESI (confidence intervals development) anova option added geeglm, lme, lmerMod Updated bootstrap sampling ensure correct number clusters Error f2S t2S_alt formula corrected (denominator now n instead residual degrees freedom) Added bootstrap fail counter resi nls geeglm model types Changed class summary resi object summary_resi consistency Small typos inconsistencies fixed","code":""},{"path":"https://statimagcoll.github.io/RESI/news/index.html","id":"resi-105","dir":"Changelog","previous_headings":"","what":"RESI 1.0.5","title":"RESI 1.0.5","text":"CRAN release: 2022-09-06 First version","code":""}]
